#BlueJ class context
comment0.target=Habitacion
comment1.params=lugar
comment1.target=Habitacion(LugaresMapa)
comment1.text=\r\n\ Crea\ una\ habitacion\ descrita\ por\ "descripcion".\ \r\n\ Inicialmente,\ la\ habitacion\ no\ tiene\ salidas,\ "descripcion"\r\n\ es\ algo\ asi\ como\ "una\ cocina"\ o\ "un\ patio".\r\n\ \r\n\ Se\ incorpora\ el\ String\ nombre\ y\ el\ TreeMap\ de\ elementos,\ el\r\n\ liquido\ derramado\ y\ el\ estado\ para\ adaptarlo\ al\ TP\ de\r\n\ Informatica\ Avanzada.\r\n\ \r\n\ Se\ inicializa\ en\ estado\ vacio\ (ver\ Arroyo\ y\ Barrica\ a\ modo\r\n\ de\ ejemplo\ de\ los\ estados)\r\n\ \r\n\ @param\ lugar\ El\ nombre\ y\ la\ descripcion\ de\ la\ habitacion.\r\n
comment10.params=direccion\ vecina
comment10.target=void\ establecerSalida(Salida,\ Habitacion)
comment10.text=\r\n\ Define\ las\ salidas\ de\ esta\ habitacion.\r\n\ @param\ direccion\ La\ direccion\ de\ la\ salida\r\n\ @param\ vecina\ \ La\ habitacion\ a\ la\ cual\ esta\ salida\ conduce.\r\n
comment11.params=
comment11.target=java.lang.String\ getStringDeSalidas()
comment11.text=\r\n\ Devuelve\ una\ cadena\ describiendo\ las\ salidas\ de\ la\ habitacion,\r\n\ por\ ejemplo\r\n\ \r\n\ "Salidas\:\ norte\ oeste".\r\n\ \r\n\ @return\ Detalles\ de\ las\ salidas\ de\ la\ habitacion\r\n
comment12.params=
comment12.target=EstadoContenedor\ getEstado()
comment13.params=
comment13.target=Liquido\ getDerramado()
comment2.params=
comment2.target=java.lang.String\ getDescripcionLarga()
comment2.text=\r\n\ Devuelve\ una\ descripcion\ de\ la\ habitacion\ en\ la\ forma\:\r\n\ \r\n\ \ \ \ \ El\ camino\ que\ te\ lleva\ al\ pueblo.\r\n\ \ \ \ \ Se\ ha\ derramado\ Agua\ en\ el\ piso.\r\n\ \ \ \ \ Salidas\:\ norte\ oeste\r\n\ \ \ \ \ Elementos\:\ Pan\ Pluma\ Flecha\r\n\ \r\n\ MODIFICAR\ el\ metodo\ para\ que\ la\ descripcion\:\r\n\ \ 1)\ incluya\ la\ lista\ de\ elementos,\r\n\ \ 2)\ si\ el\ campo\ derramado\ contiene\ un\ liquido,\ que\r\n\ \ \ \ \ agrege\ la\ linea\ "Se\ ha\ derramado\ <liquido>\ en\ el\ piso".\r\n\ \r\n\ @return\ Una\ descripcion\ larga\ de\ esta\ habitacion\r\n
comment3.params=
comment3.target=java.lang.String\ getStringDeElementos()
comment3.text=\r\n\ Devuelve\ una\ cadena\ describiendo\ las\ salidas\ de\ la\ habitacion,\r\n\ por\ ejemplo\:\r\n\ \ \ \ "Elementos\:\ Pan\ Pluma\ Flecha".\r\n\ En\ caso\ de\ no\ haber\ elementos,\ devuelve\ la\ cadena\:\r\n\ \ \ \ "No\ hay\ elementos\ en\ la\ habitacion"\r\n\ \r\n\ El\ texto\ apropiado\ se\ obtiene\ del\ metodo\ toString()\ sobreescrito\r\n\ en\ las\ clases\ privadas\ Vacia\ y\ ConElementos\ (estados).\r\n\ \r\n\ @return\ Detalles\ de\ las\ salidas\ de\ la\ habitacion\r\n
comment4.params=direccion
comment4.target=Habitacion\ getSalida(Salida)
comment4.text=\r\n\ Devuelve\ la\ habitacion\ a\ la\ que\ se\ llega\ si\ vamos\ desde\ esta\r\n\ habitacion\ en\ la\ direccion\ indicada.\ Si\ no\ hay\ habitacion\ en\r\n\ esa\ direccion,\ lanza\ excepcion\ con\ el\ mensaje\:\r\n\ \ \ \ "No\ hay\ salida\ en\ direccion\ <direccion>"\r\n\ donde\ <direccion>\ es\ la\ direccion\ indicada.\r\n\ \r\n\ @param\ direccion\ La\ direccion\ de\ salida\r\n\ @return\ La\ habitacion\ en\ la\ direccion\ indicada\r\n
comment5.params=elemento
comment5.target=void\ addElemento(Elemento)
comment5.text=\r\n\ Delega\ metodos\ para\ acceder\ a\ los\ metodos\ apropiados\r\n\ en\ base\ al\ estado\ del\ objeto.\r\n\ \r\n\ Agrega\ un\ elemento\ a\ la\ habitacion.\r\n\ \r\n\ Si\ el\ elemento\ es\ de\ la\ familia\ de\ los\ liquidos,\ no\ se\ agrega\r\n\ al\ mapa,\ sino\ al\ campo\ "derramado",\ y\ se\ debe\ cambiar\ la\r\n\ descripcion\ de\ la\ habitacion.\r\n\ \r\n\ @param\ elemento\ El\ elemento\ a\ agregar.\r\n\ @throws\ ContenedorLlenoException\ No\ aplica.\r\n\ @throws\ AccionNoPermitidaException\ No\ aplica.\r\n
comment6.params=nombre
comment6.target=Elemento\ getElemento(java.lang.String)
comment6.text=\r\n\ Delegate\ methods\ para\ acceder\ a\ los\ metodos\ apropiados\r\n\ en\ base\ al\ estado\ del\ objeto.\r\n\ \r\n\ Brinda\ acceso\ a\ un\ elemento\ en\ la\ habitacion.\ Si\ el\ objeto\ es\ portable,\r\n\ lo\ quita\ del\ mapa.\ \ Si\ es\ decorado,\ devuelve\ la\ referencia\ sin\ quitarlo.\r\n\ \r\n\ @param\ nombre\ El\ nombre\ del\ elemento\ a\ acceder.\r\n\ @return\ El\ elemento\ a\ acceder.\r\n\ @throws\ ContenedorVacioException\ En\ caso\ que\ la\ habitacion\ este\ vacia\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ con\ el\ mensaje\:\ "No\ hay\ elementos\ en\ la\ habitacion".\r\n\ @throws\ AccionNoPermitidaException\ En\ caso\ que\ el\ elemento\ no\ exista\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ con\ el\ mensaje\:\ "No\ existe\ el\ elemento\ <nombre>"\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (<nombre>\ \=\=\ nombre\ del\ elemento).\r\n
comment7.params=
comment7.target=Elemento\ getElemento()
comment7.text=\r\n\ Se\ utiliza\ la\ version\ implementada\ en\ EstadoContenedor,\r\n\ que\ siempre\ lanza\ la\ excepcion\ AccionNoPermitidaException.\r\n
comment8.params=
comment8.target=java.lang.String\ getNombre()
comment8.text=\r\n\ Devuelve\ el\ nombre\ de\ la\ habitacion.\r\n\ \r\n\ @return\ El\ nombre\ de\ la\ habitacion.\r\n
comment9.params=
comment9.target=java.lang.String\ getDescripcionCorta()
comment9.text=\r\n\ @return\ La\ descripcion\ corta\ de\ esta\ habitacion\r\n\ (la\ que\ se\ definio\ en\ el\ constructor).\r\n
numComments=14
